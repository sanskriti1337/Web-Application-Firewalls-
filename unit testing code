import unittest
from collections import deque
from WAF import FirewallTester  # replace with your filename

class TestFirewallTester(unittest.TestCase):
    def setUp(self):
        self.paths = ["admin", "login"]
        self.output_mock = DummyOutput()
        self.tester = FirewallTester("https://example.com", self.paths, self.output_mock)

    def test_paths_queue_initialization(self):
        self.assertIsInstance(self.tester._paths_queue, deque)
        self.assertEqual(len(self.tester._paths_queue), len(self.paths))

    def test_sort_results(self):
        self.tester._results = [
            {'url': 'url1', 'status': 200, 'size': 100, 'time': 0.3},
            {'url': 'url2', 'status': 404, 'size': 50, 'time': 0.1}
        ]
        self.tester.sort_results(key='time')
        self.assertEqual(self.tester._results[0]['time'], 0.1)

    def test_search_results_by_status(self):
        self.tester._results = [
            {'url': 'url1', 'status': 200, 'size': 100, 'time': 0.3},
            {'url': 'url2', 'status': 404, 'size': 50, 'time': 0.1}
        ]
        results = self.tester.search_results(status_code=404)
        self.assertEqual(len(results), 1)
        self.assertEqual(results[0]['status'], 404)

class DummyOutput:
    def __init__(self):
        self.contents = []

    def insert(self, *args):
        self.contents.append(args)

    def see(self, *args):
        pass

if __name__ == "__main__":
    unittest.main()



